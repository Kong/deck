name: release

on:
  push:
    tags:
      - 'v*.*'

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '^1.20'
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          # either 'goreleaser' (default) or 'goreleaser-pro'
          distribution: goreleaser
          version: v1.16.2
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload assets
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/*

  build-push-images:
    runs-on: ubuntu-latest
    steps:
      - name: Add standard tags
        run: |
          echo 'TAGS_STANDARD<<EOF' >> $GITHUB_ENV
          echo 'type=ref,event=branch' >> $GITHUB_ENV
          echo 'type=semver,pattern={{raw}}' >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4.6.0
        with:
          images: kong/deck
          tags: ${{ env.TAGS_STANDARD }}${{ env.TAGS_SUPPLEMENTAL }}
          flavor: |
            latest=${{ startsWith(github.ref, 'refs/tags/v1') }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          push: true
          file: Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          build-args: |
            TAG=${{ steps.meta.outputs.tags }}
            COMMIT=${{ github.sha }}
