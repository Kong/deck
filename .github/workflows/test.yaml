name: CI Test

on: [push, pull_request]

jobs:
  test:
    strategy:
      matrix:
        kong_version:
        - '2.7.0'
    env:
      KONG_VERSION: ${{ matrix.kong_version }}
      # KONG_ENTERPRISE_REPO_USERNAME: ${{ secrets.KONG_ENTERPRISE_REPO_USERNAME }}
      # KONG_ENTERPRISE_REPO_PASSSWORD: ${{ secrets.KONG_ENTERPRISE_REPO_PASSSWORD }}
      # KONG_LICENSE_DATA: ${{ secrets.KONG_LICENSE_DATA }}
      KONG_ANONYMOUS_REPORTS: "off"
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11.6-alpine
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Setup go
        uses: actions/setup-go@v2
        with:
          go-version: '^1.16'
      - name: Checkout repository
        uses: actions/checkout@v2.3.4
      - name: Setup golangci-lint
        uses: golangci/golangci-lint-action@v2.5.2
        with:
          version: v1.40.1
      - name: Verify Codegen
        run: make verify-codegen
      - name: Setup Postgres
        run: |
          psql -c 'create database kong;' -U postgres -h 127.0.0.1 -p 5432
          psql -c 'create user kong;' -U postgres -h 127.0.0.1 -p 5432
          psql -c 'GRANT ALL PRIVILEGES ON DATABASE "kong" to kong;' -U postgres -h 127.0.0.1 -p 5432
      - name: Setup Kong
        run: make setup-kong
      - name: Build
        run: make build
      - name: Run tests with Coverage
        run: make coverage
      - name: Upload Code Coverage
        uses: codecov/codecov-action@v2.1.0
        with:
          name: codecov-deck
          fail_ci_if_error: true
