apiVersion: configuration.konghq.com/v1
kind: KongIngress
metadata:
  annotations:
    kubernetes.io/ingress.class: kong
  creationTimestamp: null
  name: example-service
upstream:
  algorithm: round-robin
  hash_fallback: none
  hash_on: none
  hash_on_cookie_path: /
  healthchecks:
    active:
      concurrency: 10
      headers:
        x-another-header:
        - bla
        x-my-header:
        - foo
        - bar
      healthy:
        http_statuses:
        - 200
        - 302
        interval: 0
        successes: 0
      http_path: /
      https_sni: example.com
      https_verify_certificate: true
      timeout: 1
      type: http
      unhealthy:
        http_failures: 0
        http_statuses:
        - 429
        - 404
        - 500
        - 501
        - 502
        - 503
        - 504
        - 505
        interval: 0
        tcp_failures: 0
        timeouts: 0
    passive:
      healthy:
        http_statuses:
        - 200
        - 201
        - 202
        - 203
        - 204
        - 205
        - 206
        - 207
        - 208
        - 226
        - 300
        - 301
        - 302
        - 303
        - 304
        - 305
        - 306
        - 307
        - 308
        successes: 0
      type: http
      unhealthy:
        http_failures: 0
        http_statuses:
        - 429
        - 500
        - 503
        tcp_failures: 0
        timeouts: 0
    threshold: 0
  host_header: example.com
  slots: 10000
---
apiVersion: configuration.konghq.com/v1
config:
  ca_certificates:
  - cce8c384-721f-4f58-85dd-50834e3e733a
  revocation_check_mode: SKIP
  skip_consumer_lookup: false
kind: KongPlugin
metadata:
  annotations:
    kubernetes.io/ingress.class: kong
  creationTimestamp: null
  name: mtls-auth
plugin: mtls-auth
status: {}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    konghq.com/headers.x-another-header: bla
    konghq.com/headers.x-my-header: foo,bar
    konghq.com/https-redirect-status-code: "302"
    konghq.com/methods: GET,POST
    konghq.com/plugins: mtls-auth
    konghq.com/preserve-host: "true"
    konghq.com/protocols: http,https
    konghq.com/regex-priority: "1"
    konghq.com/snis: example.com
    konghq.com/strip-path: "false"
  creationTimestamp: null
  name: example-route
spec:
  ingressClassName: kong
  rules:
  - host: example.com
    http:
      paths:
      - backend:
          service:
            name: example-service
            port:
              number: 80
        path: /v1/example
        pathType: ImplementationSpecific
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    konghq.com/connect-timeout: "5000"
    konghq.com/override: example-service
    konghq.com/path: /v1
    konghq.com/protocol: http
    konghq.com/read-timeout: "60000"
    konghq.com/retries: "5"
    konghq.com/write-timeout: "60000"
  creationTimestamp: null
  name: example-service
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: example-service
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Secret
metadata:
  annotations:
    kubernetes.io/ingress.class: kong
  creationTimestamp: null
  name: mtls-auth-example-user
stringData:
  id: cce8c384-721f-4f58-85dd-50834e3e733a
  kongCredType: mtls-auth
  subject_name: example-user@example.com
type: Opaque
---
apiVersion: configuration.konghq.com/v1
credentials:
- mtls-auth-example-user
custom_id: "1234567890"
kind: KongConsumer
metadata:
  annotations:
    kubernetes.io/ingress.class: kong
  creationTimestamp: null
  name: example-user
status: {}
username: example-user
---
